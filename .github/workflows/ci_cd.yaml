name: cd_ci

on:
  pull_request:
  push:
    branches: [gurpreet, main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv sync
      - name: Install JavaScript dependencies
        run: |
          npm install --save-dev jest jest-environment-jsdom @babel/core @babel/preset-env @babel/plugin-transform-modules-commonjs babel-jest
      - name: Tests
        run: pipenv run ./run-tests.sh

  ensure-cluster:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Ansible dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible google-auth requests
          ansible-galaxy collection install google.cloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: Create service account key file
        run: |
          echo '${{ secrets.GCP_CREDENTIALS }}' > /tmp/gcp-sa-key.json
          chmod 600 /tmp/gcp-sa-key.json
      - name: Run Ansible to ensure cluster exists
        run: ansible-playbook ansible/main.yml --extra-vars gcp_service_account_file=/tmp/gcp-sa-key.json

  docker:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - run: gcloud auth configure-docker gcr.io --quiet
      - name: Build Frontend
        run: |
          docker build -t gcr.io/smart-452816/frontend:${GITHUB_SHA::7} --build-arg NEXT_PUBLIC_API_URL=https://smart.ghundal.com ./src/frontend
          docker push gcr.io/smart-452816/frontend:${GITHUB_SHA::7}
      - name: Build Postgres
        run: |
          docker build -t gcr.io/smart-452816/postgres:${GITHUB_SHA::7} -f ./src/Dockerfile.postgres ./src
          docker push gcr.io/smart-452816/postgres:${GITHUB_SHA::7}
      - name: Build API
        run: |
          docker system prune -af
          docker build -t gcr.io/smart-452816/api:${GITHUB_SHA::7} ./src/api
          docker push gcr.io/smart-452816/api:${GITHUB_SHA::7}

  deploy:
    runs-on: ubuntu-latest
    needs: [docker, ensure-cluster]
    steps:
      - uses: actions/checkout@v4
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: 'smart-cluster'
          location: 'us-central1'

      - name: Decode and write base64 secret
        run: echo "${{ secrets.TLS }}" | base64 --decode > ./helm/tls.yaml
        shell: bash

      - name: 'Helm Install'
        run: 'helm upgrade --install smart ./helm --values ./helm/values.yaml --values ./helm/tls.yaml --set image.tag=${GITHUB_SHA::7}'
